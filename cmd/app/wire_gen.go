// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/google/wire"
	"github.com/kangyueyue/road"
	"github.com/kangyueyue/short-url/internal/config"
	"github.com/kangyueyue/short-url/internal/httpserver"
)

// Injectors from wire.go:

// InitApp 初始化应用
func InitApp(road2 string) (*App, error) {
	roadRoad, err := road.InitRoad(road2)
	if err != nil {
		return nil, err
	}
	configConfig, err := config.NewConfig(roadRoad)
	if err != nil {
		return nil, err
	}
	store, err := config.ProvideStore(configConfig)
	if err != nil {
		return nil, err
	}
	server := httpserver.InitialHttpServer(store)
	client := config.ProvideRedisClient(configConfig)
	app := NewApp(roadRoad, configConfig, server, store, client)
	return app, nil
}

// wire.go:

var AppSet = wire.NewSet(
	NewApp, road.InitRoad, config.NewConfig, httpserver.InitialHttpServer,
)

var DBComponentSet = wire.NewSet(config.ProvideStore, config.ProvideRedisClient)
